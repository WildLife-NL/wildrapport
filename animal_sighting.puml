@startuml
actor User
participant "RapporterenScreen" as Rapporteren
participant "AnimalConditionScreen" as Condition
participant "AnimalGenderScreen" as Gender
participant "AnimalAmountSelectionScreen" as Amount
participant "AddAnotherAnimalScreen" as AddAnother
participant "WaarnemingReportingManager" as Manager
participant "WaarnemingModel" as Model

User -> Rapporteren: Start Waarneming
activate Rapporteren

Rapporteren -> Manager: createWaarneming()
Manager -> Model: create empty model
note right: Creates WaarnemingModel with\nall fields set to null/empty

Rapporteren -> Condition: navigate
deactivate Rapporteren

User -> Condition: select condition
activate Condition
Condition -> Manager: updateCondition()
Manager -> Model: update condition
Condition -> Gender: navigate on next
deactivate Condition

User -> Gender: select gender
activate Gender
Gender -> Manager: updateGender()
Manager -> Model: update gender
Gender -> Amount: navigate on next
deactivate Gender

User -> Amount: set amounts & description
activate Amount
Amount -> Manager: updateViewCount()
Manager -> Model: update viewCount
Amount -> Manager: updateDescription()
Manager -> Model: update description
Amount -> AddAnother: navigate on next
deactivate Amount

alt Add Another Animal
    User -> AddAnother: "Ja"
    activate AddAnother
    AddAnother -> Manager: finalizeAnimal()
    note right: Adds current animal to list\nand clears animalSelected
    AddAnother -> Condition: navigate back to condition
    deactivate AddAnother
else Skip
    User -> AddAnother: "Overslaan"
    activate AddAnother
    AddAnother -> Manager: finalizeAnimal()
    note right: Final state:\n- animals list populated\n- animalSelected cleared\n- other fields preserved
    AddAnother --> User: End flow
    deactivate AddAnother
end

@enduml