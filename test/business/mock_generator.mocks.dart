// Mocks generated by Mockito 5.4.6 from annotations
// in wildrapport/test/business/mock_generator.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i18;
import 'dart:ui' as _i40;

import 'package:connectivity_plus/connectivity_plus.dart' as _i67;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i68;
import 'package:flutter/foundation.dart' as _i12;
import 'package:flutter/material.dart' as _i9;
import 'package:flutter_map/flutter_map.dart' as _i10;
import 'package:geolocator/geolocator.dart' as _i28;
import 'package:latlong2/latlong.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i29;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i66;
import 'package:wildrapport/interfaces/data_apis/auth_api_interface.dart'
    as _i17;
import 'package:wildrapport/interfaces/data_apis/belonging_api_interface.dart'
    as _i19;
import 'package:wildrapport/interfaces/data_apis/interaction_api_interface.dart'
    as _i21;
import 'package:wildrapport/interfaces/data_apis/profile_api_interface.dart'
    as _i23;
import 'package:wildrapport/interfaces/data_apis/questionnaire_api_interface.dart'
    as _i24;
import 'package:wildrapport/interfaces/data_apis/response_api_interface.dart'
    as _i25;
import 'package:wildrapport/interfaces/data_apis/species_api_interface.dart'
    as _i26;
import 'package:wildrapport/interfaces/filters/dropdown_interface.dart' as _i46;
import 'package:wildrapport/interfaces/filters/filter_interface.dart' as _i49;
import 'package:wildrapport/interfaces/location/living_lab_interface.dart'
    as _i53;
import 'package:wildrapport/interfaces/location/location_screen_interface.dart'
    as _i55;
import 'package:wildrapport/interfaces/map/location_service_interface.dart'
    as _i27;
import 'package:wildrapport/interfaces/map/map_service_interface.dart' as _i30;
import 'package:wildrapport/interfaces/map/map_state_interface.dart' as _i31;
import 'package:wildrapport/interfaces/other/belonging_manager_interface.dart'
    as _i45;
import 'package:wildrapport/interfaces/other/login_interface.dart' as _i56;
import 'package:wildrapport/interfaces/other/overzicht_interface.dart' as _i58;
import 'package:wildrapport/interfaces/other/permission_interface.dart' as _i59;
import 'package:wildrapport/interfaces/reporting/belonging_damage_report_interface.dart'
    as _i43;
import 'package:wildrapport/interfaces/reporting/common_report_fields.dart'
    as _i32;
import 'package:wildrapport/interfaces/reporting/interaction_interface.dart'
    as _i51;
import 'package:wildrapport/interfaces/reporting/possesion_report_fields.dart'
    as _i33;
import 'package:wildrapport/interfaces/reporting/questionnaire_interface.dart'
    as _i60;
import 'package:wildrapport/interfaces/reporting/reportable_interface.dart'
    as _i15;
import 'package:wildrapport/interfaces/reporting/response_interface.dart'
    as _i61;
import 'package:wildrapport/interfaces/state/edit_state_interface.dart' as _i48;
import 'package:wildrapport/interfaces/state/navigation_state_interface.dart'
    as _i57;
import 'package:wildrapport/interfaces/state/screen_state_interface.dart'
    as _i62;
import 'package:wildrapport/interfaces/waarneming_flow/animal_interface.dart'
    as _i34;
import 'package:wildrapport/interfaces/waarneming_flow/animal_sighting_reporting_interface.dart'
    as _i35;
import 'package:wildrapport/models/animal_waarneming_models/animal_gender_view_count_model.dart'
    as _i69;
import 'package:wildrapport/models/animal_waarneming_models/animal_model.dart'
    as _i11;
import 'package:wildrapport/models/animal_waarneming_models/animal_sighting_model.dart'
    as _i8;
import 'package:wildrapport/models/animal_waarneming_models/view_count_model.dart'
    as _i38;
import 'package:wildrapport/models/api_models/answer.dart' as _i72;
import 'package:wildrapport/models/api_models/experiment.dart' as _i13;
import 'package:wildrapport/models/api_models/interaction_type.dart' as _i14;
import 'package:wildrapport/models/api_models/living_labs.dart' as _i73;
import 'package:wildrapport/models/api_models/question.dart' as _i71;
import 'package:wildrapport/models/api_models/questionaire.dart' as _i4;
import 'package:wildrapport/models/api_models/species.dart' as _i5;
import 'package:wildrapport/models/api_models/user.dart' as _i2;
import 'package:wildrapport/models/beta_models/belonging_model.dart' as _i20;
import 'package:wildrapport/models/beta_models/interaction_model.dart' as _i22;
import 'package:wildrapport/models/beta_models/interaction_response_model.dart'
    as _i3;
import 'package:wildrapport/models/beta_models/location_model.dart' as _i41;
import 'package:wildrapport/models/beta_models/possesion_model.dart' as _i7;
import 'package:wildrapport/models/beta_models/report_location_model.dart'
    as _i44;
import 'package:wildrapport/models/beta_models/response_model.dart' as _i16;
import 'package:wildrapport/models/enums/animal_age.dart' as _i37;
import 'package:wildrapport/models/enums/animal_category.dart' as _i39;
import 'package:wildrapport/models/enums/animal_gender.dart' as _i36;
import 'package:wildrapport/models/enums/dropdown_type.dart' as _i47;
import 'package:wildrapport/models/enums/interaction_type.dart' as _i52;
import 'package:wildrapport/models/enums/report_type.dart' as _i64;
import 'package:wildrapport/models/ui_models/brown_button_model.dart' as _i50;
import 'package:wildrapport/models/ui_models/date_time_model.dart' as _i42;
import 'package:wildrapport/models/ui_models/image_list_model.dart' as _i70;
import 'package:wildrapport/models/ui_models/living_lab_area.dart' as _i54;
import 'package:wildrapport/providers/app_state_provider.dart' as _i63;
import 'package:wildrapport/providers/map_provider.dart' as _i65;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInteractionResponse_1 extends _i1.SmartFake
    implements _i3.InteractionResponse {
  _FakeInteractionResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeQuestionnaire_2 extends _i1.SmartFake implements _i4.Questionnaire {
  _FakeQuestionnaire_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSpecies_3 extends _i1.SmartFake implements _i5.Species {
  _FakeSpecies_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeLatLng_4 extends _i1.SmartFake implements _i6.LatLng {
  _FakeLatLng_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeDateTime_5 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePossesion_6 extends _i1.SmartFake implements _i7.Possesion {
  _FakePossesion_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAnimalSightingModel_7 extends _i1.SmartFake
    implements _i8.AnimalSightingModel {
  _FakeAnimalSightingModel_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeWidget_8 extends _i1.SmartFake implements _i9.Widget {
  _FakeWidget_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i9.DiagnosticLevel? minLevel = _i9.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeGlobalKey_9<T extends _i9.State<_i9.StatefulWidget>>
    extends _i1.SmartFake
    implements _i9.GlobalKey<T> {
  _FakeGlobalKey_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMapController_10 extends _i1.SmartFake
    implements _i10.MapController {
  _FakeMapController_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAnimalModel_11 extends _i1.SmartFake implements _i11.AnimalModel {
  _FakeAnimalModel_11(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInheritedWidget_12 extends _i1.SmartFake
    implements _i9.InheritedWidget {
  _FakeInheritedWidget_12(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({_i9.DiagnosticLevel? minLevel = _i9.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeDiagnosticsNode_13 extends _i1.SmartFake
    implements _i9.DiagnosticsNode {
  _FakeDiagnosticsNode_13(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);

  @override
  String toString({
    _i12.TextTreeConfiguration? parentConfiguration,
    _i9.DiagnosticLevel? minLevel = _i9.DiagnosticLevel.info,
  }) => super.toString();
}

class _FakeExperiment_14 extends _i1.SmartFake implements _i13.Experiment {
  _FakeExperiment_14(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInteractionType_15 extends _i1.SmartFake
    implements _i14.InteractionType {
  _FakeInteractionType_15(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeReportable_16 extends _i1.SmartFake implements _i15.Reportable {
  _FakeReportable_16(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_17 extends _i1.SmartFake implements _i16.Response {
  _FakeResponse_17(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AuthApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApiInterface extends _i1.Mock implements _i17.AuthApiInterface {
  MockAuthApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<Map<String, dynamic>> authenticate(
    String? displayNameApp,
    String? email,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#authenticate, [displayNameApp, email]),
            returnValue: _i18.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i18.Future<Map<String, dynamic>>);

  @override
  _i18.Future<_i2.User> authorize(String? email, String? code) =>
      (super.noSuchMethod(
            Invocation.method(#authorize, [email, code]),
            returnValue: _i18.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#authorize, [email, code])),
            ),
          )
          as _i18.Future<_i2.User>);
}

/// A class which mocks [BelongingApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockBelongingApiInterface extends _i1.Mock
    implements _i19.BelongingApiInterface {
  MockBelongingApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i20.Belonging>> getAllBelongings() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBelongings, []),
            returnValue: _i18.Future<List<_i20.Belonging>>.value(
              <_i20.Belonging>[],
            ),
          )
          as _i18.Future<List<_i20.Belonging>>);
}

/// A class which mocks [InteractionApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockInteractionApiInterface extends _i1.Mock
    implements _i21.InteractionApiInterface {
  MockInteractionApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i3.InteractionResponse> sendInteraction(
    _i22.Interaction? interaction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#sendInteraction, [interaction]),
            returnValue: _i18.Future<_i3.InteractionResponse>.value(
              _FakeInteractionResponse_1(
                this,
                Invocation.method(#sendInteraction, [interaction]),
              ),
            ),
          )
          as _i18.Future<_i3.InteractionResponse>);
}

/// A class which mocks [ProfileApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileApiInterface extends _i1.Mock
    implements _i23.ProfileApiInterface {
  MockProfileApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<void> setProfileDataInDeviceStorage() =>
      (super.noSuchMethod(
            Invocation.method(#setProfileDataInDeviceStorage, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);
}

/// A class which mocks [QuestionnaireApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaireApiInterface extends _i1.Mock
    implements _i24.QuestionnaireApiInterface {
  MockQuestionnaireApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i4.Questionnaire> getQuestionnaireByID(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getQuestionnaireByID, [id]),
            returnValue: _i18.Future<_i4.Questionnaire>.value(
              _FakeQuestionnaire_2(
                this,
                Invocation.method(#getQuestionnaireByID, [id]),
              ),
            ),
          )
          as _i18.Future<_i4.Questionnaire>);
}

/// A class which mocks [ResponseApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponseApiInterface extends _i1.Mock
    implements _i25.ResponseApiInterface {
  MockResponseApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<bool> addReponse(
    String? interactionID,
    String? questionID,
    String? answerID,
    String? text,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addReponse, [
              interactionID,
              questionID,
              answerID,
              text,
            ]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);
}

/// A class which mocks [SpeciesApiInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpeciesApiInterface extends _i1.Mock
    implements _i26.SpeciesApiInterface {
  MockSpeciesApiInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i5.Species>> getAllSpecies() =>
      (super.noSuchMethod(
            Invocation.method(#getAllSpecies, []),
            returnValue: _i18.Future<List<_i5.Species>>.value(<_i5.Species>[]),
          )
          as _i18.Future<List<_i5.Species>>);

  @override
  _i18.Future<_i5.Species> getSpecies(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getSpecies, [id]),
            returnValue: _i18.Future<_i5.Species>.value(
              _FakeSpecies_3(this, Invocation.method(#getSpecies, [id])),
            ),
          )
          as _i18.Future<_i5.Species>);

  @override
  _i18.Future<_i5.Species> getSpeciesByCategory(String? category) =>
      (super.noSuchMethod(
            Invocation.method(#getSpeciesByCategory, [category]),
            returnValue: _i18.Future<_i5.Species>.value(
              _FakeSpecies_3(
                this,
                Invocation.method(#getSpeciesByCategory, [category]),
              ),
            ),
          )
          as _i18.Future<_i5.Species>);
}

/// A class which mocks [LocationServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationServiceInterface extends _i1.Mock
    implements _i27.LocationServiceInterface {
  MockLocationServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i28.Position?> determinePosition() =>
      (super.noSuchMethod(
            Invocation.method(#determinePosition, []),
            returnValue: _i18.Future<_i28.Position?>.value(),
          )
          as _i18.Future<_i28.Position?>);

  @override
  _i18.Future<String> getAddressFromPosition(_i28.Position? position) =>
      (super.noSuchMethod(
            Invocation.method(#getAddressFromPosition, [position]),
            returnValue: _i18.Future<String>.value(
              _i29.dummyValue<String>(
                this,
                Invocation.method(#getAddressFromPosition, [position]),
              ),
            ),
          )
          as _i18.Future<String>);

  @override
  bool isLocationInNetherlands(double? lat, double? lon) =>
      (super.noSuchMethod(
            Invocation.method(#isLocationInNetherlands, [lat, lon]),
            returnValue: false,
          )
          as bool);
}

/// A class which mocks [MapServiceInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapServiceInterface extends _i1.Mock
    implements _i30.MapServiceInterface {
  MockMapServiceInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.LatLng constrainLatLng(_i6.LatLng? point) =>
      (super.noSuchMethod(
            Invocation.method(#constrainLatLng, [point]),
            returnValue: _FakeLatLng_4(
              this,
              Invocation.method(#constrainLatLng, [point]),
            ),
          )
          as _i6.LatLng);

  @override
  _i18.Future<String> getAddressFromLatLng(_i6.LatLng? point) =>
      (super.noSuchMethod(
            Invocation.method(#getAddressFromLatLng, [point]),
            returnValue: _i18.Future<String>.value(
              _i29.dummyValue<String>(
                this,
                Invocation.method(#getAddressFromLatLng, [point]),
              ),
            ),
          )
          as _i18.Future<String>);

  @override
  bool isLocationInNetherlands(double? lat, double? lon) =>
      (super.noSuchMethod(
            Invocation.method(#isLocationInNetherlands, [lat, lon]),
            returnValue: false,
          )
          as bool);
}

/// A class which mocks [MapStateInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapStateInterface extends _i1.Mock implements _i31.MapStateInterface {
  MockMapStateInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void constrainMapCamera(_i10.MapController? mapController) =>
      super.noSuchMethod(
        Invocation.method(#constrainMapCamera, [mapController]),
        returnValueForMissingStub: null,
      );

  @override
  void animateToLocation({
    required _i10.MapController? mapController,
    required _i6.LatLng? targetLocation,
    required double? targetZoom,
    required _i9.TickerProvider? vsync,
    Duration? duration = const Duration(milliseconds: 500),
  }) => super.noSuchMethod(
    Invocation.method(#animateToLocation, [], {
      #mapController: mapController,
      #targetLocation: targetLocation,
      #targetZoom: targetZoom,
      #vsync: vsync,
      #duration: duration,
    }),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [CommonReportFields].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommonReportFields extends _i1.Mock
    implements _i32.CommonReportFields {
  MockCommonReportFields() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime get systemDateTime =>
      (super.noSuchMethod(
            Invocation.getter(#systemDateTime),
            returnValue: _FakeDateTime_5(
              this,
              Invocation.getter(#systemDateTime),
            ),
          )
          as DateTime);
}

/// A class which mocks [PossesionReportFields].
///
/// See the documentation for Mockito's code generation for more information.
class MockPossesionReportFields extends _i1.Mock
    implements _i33.PossesionReportFields {
  MockPossesionReportFields() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Possesion get possesion =>
      (super.noSuchMethod(
            Invocation.getter(#possesion),
            returnValue: _FakePossesion_6(this, Invocation.getter(#possesion)),
          )
          as _i7.Possesion);

  @override
  double get currentImpactDamages =>
      (super.noSuchMethod(
            Invocation.getter(#currentImpactDamages),
            returnValue: 0.0,
          )
          as double);

  @override
  double get estimatedTotalDamages =>
      (super.noSuchMethod(
            Invocation.getter(#estimatedTotalDamages),
            returnValue: 0.0,
          )
          as double);

  @override
  String get impactedAreaType =>
      (super.noSuchMethod(
            Invocation.getter(#impactedAreaType),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#impactedAreaType),
            ),
          )
          as String);

  @override
  double get impactedArea =>
      (super.noSuchMethod(Invocation.getter(#impactedArea), returnValue: 0.0)
          as double);

  @override
  DateTime get systemDateTime =>
      (super.noSuchMethod(
            Invocation.getter(#systemDateTime),
            returnValue: _FakeDateTime_5(
              this,
              Invocation.getter(#systemDateTime),
            ),
          )
          as DateTime);
}

/// A class which mocks [Reportable].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportable extends _i1.Mock implements _i15.Reportable {
  MockReportable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [AnimalRepositoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalRepositoryInterface extends _i1.Mock
    implements _i34.AnimalRepositoryInterface {
  MockAnimalRepositoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i11.AnimalModel>> getAnimals() =>
      (super.noSuchMethod(
            Invocation.method(#getAnimals, []),
            returnValue: _i18.Future<List<_i11.AnimalModel>>.value(
              <_i11.AnimalModel>[],
            ),
          )
          as _i18.Future<List<_i11.AnimalModel>>);
}

/// A class which mocks [AnimalSightingReportingInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalSightingReportingInterface extends _i1.Mock
    implements _i35.AnimalSightingReportingInterface {
  MockAnimalSightingReportingInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.AnimalSightingModel createanimalSighting() =>
      (super.noSuchMethod(
            Invocation.method(#createanimalSighting, []),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#createanimalSighting, []),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateSelectedAnimal(
    _i11.AnimalModel? selectedAnimal,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateSelectedAnimal, [selectedAnimal]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateSelectedAnimal, [selectedAnimal]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateGender(_i36.AnimalGender? gender) =>
      (super.noSuchMethod(
            Invocation.method(#updateGender, [gender]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateGender, [gender]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateAge(_i37.AnimalAge? age) =>
      (super.noSuchMethod(
            Invocation.method(#updateAge, [age]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateAge, [age]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateViewCount(_i38.ViewCountModel? viewCount) =>
      (super.noSuchMethod(
            Invocation.method(#updateViewCount, [viewCount]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateViewCount, [viewCount]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateCategory(_i39.AnimalCategory? category) =>
      (super.noSuchMethod(
            Invocation.method(#updateCategory, [category]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateCategory, [category]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i39.AnimalCategory convertStringToCategory(String? status) =>
      (super.noSuchMethod(
            Invocation.method(#convertStringToCategory, [status]),
            returnValue: _i39.AnimalCategory.andere,
          )
          as _i39.AnimalCategory);

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  _i8.AnimalSightingModel finalizeAnimal({bool? clearSelected = true}) =>
      (super.noSuchMethod(
            Invocation.method(#finalizeAnimal, [], {
              #clearSelected: clearSelected,
            }),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#finalizeAnimal, [], {
                #clearSelected: clearSelected,
              }),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  void clearCurrentanimalSighting() => super.noSuchMethod(
    Invocation.method(#clearCurrentanimalSighting, []),
    returnValueForMissingStub: null,
  );

  @override
  _i8.AnimalSightingModel updateDescription(String? description) =>
      (super.noSuchMethod(
            Invocation.method(#updateDescription, [description]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateDescription, [description]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  bool validateActiveAnimalSighting() =>
      (super.noSuchMethod(
            Invocation.method(#validateActiveAnimalSighting, []),
            returnValue: false,
          )
          as bool);

  @override
  _i8.AnimalSightingModel processAnimalSelection(
    _i11.AnimalModel? selectedAnimal,
    _i34.AnimalManagerInterface? animalManager,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processAnimalSelection, [
              selectedAnimal,
              animalManager,
            ]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#processAnimalSelection, [
                selectedAnimal,
                animalManager,
              ]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  bool handleGenderSelection(_i36.AnimalGender? selectedGender) =>
      (super.noSuchMethod(
            Invocation.method(#handleGenderSelection, [selectedGender]),
            returnValue: false,
          )
          as bool);

  @override
  _i8.AnimalSightingModel updateAnimal(_i11.AnimalModel? updatedAnimal) =>
      (super.noSuchMethod(
            Invocation.method(#updateAnimal, [updatedAnimal]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateAnimal, [updatedAnimal]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateLocation(_i41.LocationModel? location) =>
      (super.noSuchMethod(
            Invocation.method(#updateLocation, [location]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateLocation, [location]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel removeLocation(_i41.LocationModel? location) =>
      (super.noSuchMethod(
            Invocation.method(#removeLocation, [location]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#removeLocation, [location]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateDateTime(DateTime? dateTime) =>
      (super.noSuchMethod(
            Invocation.method(#updateDateTime, [dateTime]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateDateTime, [dateTime]),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  _i8.AnimalSightingModel updateDateTimeModel(
    _i42.DateTimeModel? dateTimeModel,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateDateTimeModel, [dateTimeModel]),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#updateDateTimeModel, [dateTimeModel]),
            ),
          )
          as _i8.AnimalSightingModel);
}

/// A class which mocks [BelongingDamageReportInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockBelongingDamageReportInterface extends _i1.Mock
    implements _i43.BelongingDamageReportInterface {
  MockBelongingDamageReportInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<dynamic> buildPossesionWidgetList() =>
      (super.noSuchMethod(
            Invocation.method(#buildPossesionWidgetList, []),
            returnValue: <dynamic>[],
          )
          as List<dynamic>);

  @override
  _i18.Future<_i3.InteractionResponse?> postInteraction() =>
      (super.noSuchMethod(
            Invocation.method(#postInteraction, []),
            returnValue: _i18.Future<_i3.InteractionResponse?>.value(),
          )
          as _i18.Future<_i3.InteractionResponse?>);

  @override
  void updateImpactedCrop(String? value) => super.noSuchMethod(
    Invocation.method(#updateImpactedCrop, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateCurrentDamage(double? value) => super.noSuchMethod(
    Invocation.method(#updateCurrentDamage, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateExpectedDamage(double? value) => super.noSuchMethod(
    Invocation.method(#updateExpectedDamage, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateImpactedAreaType(String? value) => super.noSuchMethod(
    Invocation.method(#updateImpactedAreaType, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateImpactedArea(double? value) => super.noSuchMethod(
    Invocation.method(#updateImpactedArea, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateDescription(String? value) => super.noSuchMethod(
    Invocation.method(#updateDescription, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateSuspectedAnimal(String? value) => super.noSuchMethod(
    Invocation.method(#updateSuspectedAnimal, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateSystemLocation(_i44.ReportLocation? value) => super.noSuchMethod(
    Invocation.method(#updateSystemLocation, [value]),
    returnValueForMissingStub: null,
  );

  @override
  void updateUserLocation(_i44.ReportLocation? value) => super.noSuchMethod(
    Invocation.method(#updateUserLocation, [value]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [BelongingManagerInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockBelongingManagerInterface extends _i1.Mock
    implements _i45.BelongingManagerInterface {
  MockBelongingManagerInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<String>> getAllBelongingsFilteredAndFormatted(
    String? category,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAllBelongingsFilteredAndFormatted, [
              category,
            ]),
            returnValue: _i18.Future<List<String>>.value(<String>[]),
          )
          as _i18.Future<List<String>>);
}

/// A class which mocks [DropdownInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockDropdownInterface extends _i1.Mock implements _i46.DropdownInterface {
  MockDropdownInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Widget buildDropdown({
    required _i47.DropdownType? type,
    required String? selectedValue,
    required bool? isExpanded,
    required dynamic Function(bool)? onExpandChanged,
    required dynamic Function(String)? onOptionSelected,
    required _i9.BuildContext? context,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#buildDropdown, [], {
              #type: type,
              #selectedValue: selectedValue,
              #isExpanded: isExpanded,
              #onExpandChanged: onExpandChanged,
              #onOptionSelected: onOptionSelected,
              #context: context,
            }),
            returnValue: _FakeWidget_8(
              this,
              Invocation.method(#buildDropdown, [], {
                #type: type,
                #selectedValue: selectedValue,
                #isExpanded: isExpanded,
                #onExpandChanged: onExpandChanged,
                #onOptionSelected: onOptionSelected,
                #context: context,
              }),
            ),
          )
          as _i9.Widget);
}

/// A class which mocks [EditStateInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditStateInterface extends _i1.Mock
    implements _i48.EditStateInterface {
  MockEditStateInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isEditMode =>
      (super.noSuchMethod(Invocation.getter(#isEditMode), returnValue: false)
          as bool);

  @override
  void toggleEditMode() => super.noSuchMethod(
    Invocation.method(#toggleEditMode, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [CategoryInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoryInterface extends _i1.Mock implements _i49.CategoryInterface {
  MockCategoryInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Map<String, String>> getAnimalCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getAnimalCategories, []),
            returnValue: <Map<String, String>>[],
          )
          as List<Map<String, String>>);
}

/// A class which mocks [FilterInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockFilterInterface extends _i1.Mock implements _i49.FilterInterface {
  MockFilterInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<T> filterByCategory<T>(
    List<T>? items,
    String? category,
    bool Function(T, String)? filterFunction,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filterByCategory, [
              items,
              category,
              filterFunction,
            ]),
            returnValue: <T>[],
          )
          as List<T>);

  @override
  List<_i50.BrownButtonModel> getAvailableFilters(String? currentFilter) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableFilters, [currentFilter]),
            returnValue: <_i50.BrownButtonModel>[],
          )
          as List<_i50.BrownButtonModel>);

  @override
  List<_i11.AnimalModel> filterAnimalsAlphabetically(
    List<_i11.AnimalModel>? animals,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#filterAnimalsAlphabetically, [animals]),
            returnValue: <_i11.AnimalModel>[],
          )
          as List<_i11.AnimalModel>);

  @override
  List<_i11.AnimalModel> searchAnimals(
    List<_i11.AnimalModel>? animals,
    String? searchTerm,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchAnimals, [animals, searchTerm]),
            returnValue: <_i11.AnimalModel>[],
          )
          as List<_i11.AnimalModel>);
}

/// A class which mocks [InteractionInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockInteractionInterface extends _i1.Mock
    implements _i51.InteractionInterface {
  MockInteractionInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i3.InteractionResponse?> postInteraction(
    _i15.Reportable? report,
    _i52.InteractionType? type,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#postInteraction, [report, type]),
            returnValue: _i18.Future<_i3.InteractionResponse?>.value(),
          )
          as _i18.Future<_i3.InteractionResponse?>);
}

/// A class which mocks [LivingLabInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLivingLabInterface extends _i1.Mock
    implements _i53.LivingLabInterface {
  MockLivingLabInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i54.LivingLabArea> getAllLivingLabs() =>
      (super.noSuchMethod(
            Invocation.method(#getAllLivingLabs, []),
            returnValue: <_i54.LivingLabArea>[],
          )
          as List<_i54.LivingLabArea>);

  @override
  _i54.LivingLabArea? getLivingLabById(String? id) =>
      (super.noSuchMethod(Invocation.method(#getLivingLabById, [id]))
          as _i54.LivingLabArea?);

  @override
  _i54.LivingLabArea? getLivingLabByLocation(_i6.LatLng? location) =>
      (super.noSuchMethod(
            Invocation.method(#getLivingLabByLocation, [location]),
          )
          as _i54.LivingLabArea?);

  @override
  bool isLocationInAnyLivingLab(_i6.LatLng? location) =>
      (super.noSuchMethod(
            Invocation.method(#isLocationInAnyLivingLab, [location]),
            returnValue: false,
          )
          as bool);
}

/// A class which mocks [LocationScreenInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocationScreenInterface extends _i1.Mock
    implements _i55.LocationScreenInterface {
  MockLocationScreenInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLocationDropdownExpanded =>
      (super.noSuchMethod(
            Invocation.getter(#isLocationDropdownExpanded),
            returnValue: false,
          )
          as bool);

  @override
  bool get isDateTimeDropdownExpanded =>
      (super.noSuchMethod(
            Invocation.getter(#isDateTimeDropdownExpanded),
            returnValue: false,
          )
          as bool);

  @override
  String get selectedLocation =>
      (super.noSuchMethod(
            Invocation.getter(#selectedLocation),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#selectedLocation),
            ),
          )
          as String);

  @override
  String get selectedDateTime =>
      (super.noSuchMethod(
            Invocation.getter(#selectedDateTime),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#selectedDateTime),
            ),
          )
          as String);

  @override
  String get currentLocationText =>
      (super.noSuchMethod(
            Invocation.getter(#currentLocationText),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#currentLocationText),
            ),
          )
          as String);

  @override
  _i18.Future<Map<String, dynamic>> getLocationAndDateTime(
    _i9.BuildContext? context,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getLocationAndDateTime, [context]),
            returnValue: _i18.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i18.Future<Map<String, dynamic>>);

  @override
  _i18.Future<void> handleNextPressed(_i9.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#handleNextPressed, [context]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);
}

/// A class which mocks [LoginInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginInterface extends _i1.Mock implements _i56.LoginInterface {
  MockLoginInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<bool> resendCode(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#resendCode, [email]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<_i2.User> verifyCode(String? email, String? code) =>
      (super.noSuchMethod(
            Invocation.method(#verifyCode, [email, code]),
            returnValue: _i18.Future<_i2.User>.value(
              _FakeUser_0(this, Invocation.method(#verifyCode, [email, code])),
            ),
          )
          as _i18.Future<_i2.User>);

  @override
  _i18.Future<bool> sendLoginCode(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendLoginCode, [email]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  void setVerificationVisible(bool? visible) => super.noSuchMethod(
    Invocation.method(#setVerificationVisible, [visible]),
    returnValueForMissingStub: null,
  );

  @override
  void setError(bool? isError, [String? message = '']) => super.noSuchMethod(
    Invocation.method(#setError, [isError, message]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [NavigationStateInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationStateInterface extends _i1.Mock
    implements _i57.NavigationStateInterface {
  MockNavigationStateInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void resetToHome(_i9.BuildContext? context) => super.noSuchMethod(
    Invocation.method(#resetToHome, [context]),
    returnValueForMissingStub: null,
  );

  @override
  void clearApplicationState(_i9.BuildContext? context) => super.noSuchMethod(
    Invocation.method(#clearApplicationState, [context]),
    returnValueForMissingStub: null,
  );

  @override
  void pushAndRemoveUntil(_i9.BuildContext? context, _i9.Widget? screen) =>
      super.noSuchMethod(
        Invocation.method(#pushAndRemoveUntil, [context, screen]),
        returnValueForMissingStub: null,
      );

  @override
  void pushReplacementForward(_i9.BuildContext? context, _i9.Widget? screen) =>
      super.noSuchMethod(
        Invocation.method(#pushReplacementForward, [context, screen]),
        returnValueForMissingStub: null,
      );

  @override
  void pushReplacementBack(_i9.BuildContext? context, _i9.Widget? screen) =>
      super.noSuchMethod(
        Invocation.method(#pushReplacementBack, [context, screen]),
        returnValueForMissingStub: null,
      );

  @override
  void pushForward(_i9.BuildContext? context, _i9.Widget? screen) =>
      super.noSuchMethod(
        Invocation.method(#pushForward, [context, screen]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OverzichtInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockOverzichtInterface extends _i1.Mock
    implements _i58.OverzichtInterface {
  MockOverzichtInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get userName =>
      (super.noSuchMethod(
            Invocation.getter(#userName),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#userName),
            ),
          )
          as String);

  @override
  double get topContainerHeight =>
      (super.noSuchMethod(
            Invocation.getter(#topContainerHeight),
            returnValue: 0.0,
          )
          as double);

  @override
  double get welcomeFontSize =>
      (super.noSuchMethod(Invocation.getter(#welcomeFontSize), returnValue: 0.0)
          as double);

  @override
  double get usernameFontSize =>
      (super.noSuchMethod(
            Invocation.getter(#usernameFontSize),
            returnValue: 0.0,
          )
          as double);

  @override
  double get logoWidth =>
      (super.noSuchMethod(Invocation.getter(#logoWidth), returnValue: 0.0)
          as double);

  @override
  double get logoHeight =>
      (super.noSuchMethod(Invocation.getter(#logoHeight), returnValue: 0.0)
          as double);

  @override
  void updateUserName(String? newName) => super.noSuchMethod(
    Invocation.method(#updateUserName, [newName]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PermissionInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockPermissionInterface extends _i1.Mock
    implements _i59.PermissionInterface {
  MockPermissionInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<bool> isPermissionGranted(_i59.PermissionType? permission) =>
      (super.noSuchMethod(
            Invocation.method(#isPermissionGranted, [permission]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> requestPermission(
    _i9.BuildContext? context,
    _i59.PermissionType? permission, {
    bool? showRationale = true,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #requestPermission,
              [context, permission],
              {#showRationale: showRationale},
            ),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> showPermissionRationale(
    _i9.BuildContext? context,
    _i59.PermissionType? permission,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#showPermissionRationale, [context, permission]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<void> handleInitialPermissions(_i9.BuildContext? context) =>
      (super.noSuchMethod(
            Invocation.method(#handleInitialPermissions, [context]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);
}

/// A class which mocks [QuestionnaireInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaireInterface extends _i1.Mock
    implements _i60.QuestionnaireInterface {
  MockQuestionnaireInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<_i4.Questionnaire> getQuestionnaire() =>
      (super.noSuchMethod(
            Invocation.method(#getQuestionnaire, []),
            returnValue: _i18.Future<_i4.Questionnaire>.value(
              _FakeQuestionnaire_2(
                this,
                Invocation.method(#getQuestionnaire, []),
              ),
            ),
          )
          as _i18.Future<_i4.Questionnaire>);

  @override
  _i18.Future<List<dynamic>> buildQuestionnaireLayout(
    _i4.Questionnaire? questionnaire,
    String? interactionID,
    _i40.VoidCallback? nextScreen,
    _i40.VoidCallback? lastNextScreen,
    _i40.VoidCallback? previousScreen,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#buildQuestionnaireLayout, [
              questionnaire,
              interactionID,
              nextScreen,
              lastNextScreen,
              previousScreen,
            ]),
            returnValue: _i18.Future<List<dynamic>>.value(<dynamic>[]),
          )
          as _i18.Future<List<dynamic>>);
}

/// A class which mocks [ResponseInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponseInterface extends _i1.Mock implements _i61.ResponseInterface {
  MockResponseInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<void> storeResponse(
    _i16.Response? response,
    String? questionaireID,
    String? questionID,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#storeResponse, [
              response,
              questionaireID,
              questionID,
            ]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  _i18.Future<void> submitResponses() =>
      (super.noSuchMethod(
            Invocation.method(#submitResponses, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  _i18.Future<void> updateResponse(
    _i16.Response? response,
    String? questionaireID,
    String? questionID,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateResponse, [
              response,
              questionaireID,
              questionID,
            ]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);
}

/// A class which mocks [ScreenStateInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockScreenStateInterface extends _i1.Mock
    implements _i62.ScreenStateInterface {
  MockScreenStateInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void loadScreenState() => super.noSuchMethod(
    Invocation.method(#loadScreenState, []),
    returnValueForMissingStub: null,
  );

  @override
  void saveScreenState() => super.noSuchMethod(
    Invocation.method(#saveScreenState, []),
    returnValueForMissingStub: null,
  );

  @override
  void updateState(String? key, dynamic value) => super.noSuchMethod(
    Invocation.method(#updateState, [key, value]),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> getCurrentState() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentState, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  void safeSetState(_i40.VoidCallback? fn) => super.noSuchMethod(
    Invocation.method(#safeSetState, [fn]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AppStateProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppStateProvider extends _i1.Mock implements _i63.AppStateProvider {
  MockAppStateProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.GlobalKey<_i9.NavigatorState> get navigatorKey =>
      (super.noSuchMethod(
            Invocation.getter(#navigatorKey),
            returnValue: _FakeGlobalKey_9<_i9.NavigatorState>(
              this,
              Invocation.getter(#navigatorKey),
            ),
          )
          as _i9.GlobalKey<_i9.NavigatorState>);

  @override
  bool get isLocationCacheValid =>
      (super.noSuchMethod(
            Invocation.getter(#isLocationCacheValid),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void setScreenState(String? screenName, String? key, dynamic value) =>
      super.noSuchMethod(
        Invocation.method(#setScreenState, [screenName, key, value]),
        returnValueForMissingStub: null,
      );

  @override
  T? getScreenState<T>(String? screenName, String? key) =>
      (super.noSuchMethod(Invocation.method(#getScreenState, [screenName, key]))
          as T?);

  @override
  void clearScreenState(String? screenName) => super.noSuchMethod(
    Invocation.method(#clearScreenState, [screenName]),
    returnValueForMissingStub: null,
  );

  @override
  void initializeReport(_i64.ReportType? reportType) => super.noSuchMethod(
    Invocation.method(#initializeReport, [reportType]),
    returnValueForMissingStub: null,
  );

  @override
  void updateCurrentReport(String? property, dynamic value) =>
      super.noSuchMethod(
        Invocation.method(#updateCurrentReport, [property, value]),
        returnValueForMissingStub: null,
      );

  @override
  void resetApplicationState(
    _i9.BuildContext? context, {
    _i9.Widget? destination,
  }) => super.noSuchMethod(
    Invocation.method(
      #resetApplicationState,
      [context],
      {#destination: destination},
    ),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i18.Future<void> updateLocationCache() =>
      (super.noSuchMethod(
            Invocation.method(#updateLocationCache, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  void startLocationUpdates() => super.noSuchMethod(
    Invocation.method(#startLocationUpdates, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [MapProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapProvider extends _i1.Mock implements _i65.MapProvider {
  MockMapProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get selectedAddress =>
      (super.noSuchMethod(
            Invocation.getter(#selectedAddress),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#selectedAddress),
            ),
          )
          as String);

  @override
  String get currentAddress =>
      (super.noSuchMethod(
            Invocation.getter(#currentAddress),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#currentAddress),
            ),
          )
          as String);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  _i10.MapController get mapController =>
      (super.noSuchMethod(
            Invocation.getter(#mapController),
            returnValue: _FakeMapController_10(
              this,
              Invocation.getter(#mapController),
            ),
          )
          as _i10.MapController);

  @override
  set selectedPosition(_i28.Position? _selectedPosition) => super.noSuchMethod(
    Invocation.setter(#selectedPosition, _selectedPosition),
    returnValueForMissingStub: null,
  );

  @override
  set selectedAddress(String? _selectedAddress) => super.noSuchMethod(
    Invocation.setter(#selectedAddress, _selectedAddress),
    returnValueForMissingStub: null,
  );

  @override
  set currentPosition(_i28.Position? _currentPosition) => super.noSuchMethod(
    Invocation.setter(#currentPosition, _currentPosition),
    returnValueForMissingStub: null,
  );

  @override
  set currentAddress(String? _currentAddress) => super.noSuchMethod(
    Invocation.setter(#currentAddress, _currentAddress),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i18.Future<void> initialize() =>
      (super.noSuchMethod(
            Invocation.method(#initialize, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  void setMapController(_i10.MapController? controller) => super.noSuchMethod(
    Invocation.method(#setMapController, [controller]),
    returnValueForMissingStub: null,
  );

  @override
  void setLoading(bool? loading) => super.noSuchMethod(
    Invocation.method(#setLoading, [loading]),
    returnValueForMissingStub: null,
  );

  @override
  _i18.Future<void> updatePosition(_i28.Position? position, String? address) =>
      (super.noSuchMethod(
            Invocation.method(#updatePosition, [position, address]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  void setSelectedLocation(_i28.Position? position, String? address) =>
      super.noSuchMethod(
        Invocation.method(#setSelectedLocation, [position, address]),
        returnValueForMissingStub: null,
      );

  @override
  _i18.Future<void> clearSelectedLocation() =>
      (super.noSuchMethod(
            Invocation.method(#clearSelectedLocation, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  _i18.Future<void> resetToCurrentLocation(
    _i28.Position? position,
    String? address,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#resetToCurrentLocation, [position, address]),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  _i18.Future<void> resetState() =>
      (super.noSuchMethod(
            Invocation.method(#resetState, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  _i18.Future<void> resetMapState() =>
      (super.noSuchMethod(
            Invocation.method(#resetMapState, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);

  @override
  void addListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i40.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AnimalManagerInterface].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalManagerInterface extends _i1.Mock
    implements _i34.AnimalManagerInterface {
  MockAnimalManagerInterface() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Future<List<_i11.AnimalModel>> getAnimals() =>
      (super.noSuchMethod(
            Invocation.method(#getAnimals, []),
            returnValue: _i18.Future<List<_i11.AnimalModel>>.value(
              <_i11.AnimalModel>[],
            ),
          )
          as _i18.Future<List<_i11.AnimalModel>>);

  @override
  _i11.AnimalModel handleAnimalSelection(_i11.AnimalModel? selectedAnimal) =>
      (super.noSuchMethod(
            Invocation.method(#handleAnimalSelection, [selectedAnimal]),
            returnValue: _FakeAnimalModel_11(
              this,
              Invocation.method(#handleAnimalSelection, [selectedAnimal]),
            ),
          )
          as _i11.AnimalModel);

  @override
  String getSelectedFilter() =>
      (super.noSuchMethod(
            Invocation.method(#getSelectedFilter, []),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.method(#getSelectedFilter, []),
            ),
          )
          as String);

  @override
  void updateFilter(String? filter) => super.noSuchMethod(
    Invocation.method(#updateFilter, [filter]),
    returnValueForMissingStub: null,
  );

  @override
  void updateSearchTerm(String? searchTerm) => super.noSuchMethod(
    Invocation.method(#updateSearchTerm, [searchTerm]),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(dynamic Function()? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(dynamic Function()? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [BuildContext].
///
/// See the documentation for Mockito's code generation for more information.
class MockBuildContext extends _i1.Mock implements _i9.BuildContext {
  MockBuildContext() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Widget get widget =>
      (super.noSuchMethod(
            Invocation.getter(#widget),
            returnValue: _FakeWidget_8(this, Invocation.getter(#widget)),
          )
          as _i9.Widget);

  @override
  bool get mounted =>
      (super.noSuchMethod(Invocation.getter(#mounted), returnValue: false)
          as bool);

  @override
  bool get debugDoingBuild =>
      (super.noSuchMethod(
            Invocation.getter(#debugDoingBuild),
            returnValue: false,
          )
          as bool);

  @override
  _i9.InheritedWidget dependOnInheritedElement(
    _i9.InheritedElement? ancestor, {
    Object? aspect,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #dependOnInheritedElement,
              [ancestor],
              {#aspect: aspect},
            ),
            returnValue: _FakeInheritedWidget_12(
              this,
              Invocation.method(
                #dependOnInheritedElement,
                [ancestor],
                {#aspect: aspect},
              ),
            ),
          )
          as _i9.InheritedWidget);

  @override
  void visitAncestorElements(_i9.ConditionalElementVisitor? visitor) =>
      super.noSuchMethod(
        Invocation.method(#visitAncestorElements, [visitor]),
        returnValueForMissingStub: null,
      );

  @override
  void visitChildElements(_i9.ElementVisitor? visitor) => super.noSuchMethod(
    Invocation.method(#visitChildElements, [visitor]),
    returnValueForMissingStub: null,
  );

  @override
  void dispatchNotification(_i9.Notification? notification) =>
      super.noSuchMethod(
        Invocation.method(#dispatchNotification, [notification]),
        returnValueForMissingStub: null,
      );

  @override
  _i9.DiagnosticsNode describeElement(
    String? name, {
    _i12.DiagnosticsTreeStyle? style = _i12.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#describeElement, [name], {#style: style}),
            returnValue: _FakeDiagnosticsNode_13(
              this,
              Invocation.method(#describeElement, [name], {#style: style}),
            ),
          )
          as _i9.DiagnosticsNode);

  @override
  _i9.DiagnosticsNode describeWidget(
    String? name, {
    _i12.DiagnosticsTreeStyle? style = _i12.DiagnosticsTreeStyle.errorProperty,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#describeWidget, [name], {#style: style}),
            returnValue: _FakeDiagnosticsNode_13(
              this,
              Invocation.method(#describeWidget, [name], {#style: style}),
            ),
          )
          as _i9.DiagnosticsNode);

  @override
  List<_i9.DiagnosticsNode> describeMissingAncestor({
    required Type? expectedAncestorType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#describeMissingAncestor, [], {
              #expectedAncestorType: expectedAncestorType,
            }),
            returnValue: <_i9.DiagnosticsNode>[],
          )
          as List<_i9.DiagnosticsNode>);

  @override
  _i9.DiagnosticsNode describeOwnershipChain(String? name) =>
      (super.noSuchMethod(
            Invocation.method(#describeOwnershipChain, [name]),
            returnValue: _FakeDiagnosticsNode_13(
              this,
              Invocation.method(#describeOwnershipChain, [name]),
            ),
          )
          as _i9.DiagnosticsNode);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i66.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getKeys, []),
            returnValue: <String>{},
          )
          as Set<String>);

  @override
  Object? get(String? key) =>
      (super.noSuchMethod(Invocation.method(#get, [key])) as Object?);

  @override
  bool? getBool(String? key) =>
      (super.noSuchMethod(Invocation.method(#getBool, [key])) as bool?);

  @override
  int? getInt(String? key) =>
      (super.noSuchMethod(Invocation.method(#getInt, [key])) as int?);

  @override
  double? getDouble(String? key) =>
      (super.noSuchMethod(Invocation.method(#getDouble, [key])) as double?);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  bool containsKey(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#containsKey, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(#getStringList, [key]))
          as List<String>?);

  @override
  _i18.Future<bool> setBool(String? key, bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setBool, [key, value]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> setInt(String? key, int? value) =>
      (super.noSuchMethod(
            Invocation.method(#setInt, [key, value]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> setDouble(String? key, double? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDouble, [key, value]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> setStringList(String? key, List<String>? value) =>
      (super.noSuchMethod(
            Invocation.method(#setStringList, [key, value]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> commit() =>
      (super.noSuchMethod(
            Invocation.method(#commit, []),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<bool> clear() =>
      (super.noSuchMethod(
            Invocation.method(#clear, []),
            returnValue: _i18.Future<bool>.value(false),
          )
          as _i18.Future<bool>);

  @override
  _i18.Future<void> reload() =>
      (super.noSuchMethod(
            Invocation.method(#reload, []),
            returnValue: _i18.Future<void>.value(),
            returnValueForMissingStub: _i18.Future<void>.value(),
          )
          as _i18.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i67.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i18.Stream<List<_i68.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i18.Stream<List<_i68.ConnectivityResult>>.empty(),
          )
          as _i18.Stream<List<_i68.ConnectivityResult>>);

  @override
  _i18.Future<List<_i68.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i18.Future<List<_i68.ConnectivityResult>>.value(
              <_i68.ConnectivityResult>[],
            ),
          )
          as _i18.Future<List<_i68.ConnectivityResult>>);
}

/// A class which mocks [AnimalModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalModel extends _i1.Mock implements _i11.AnimalModel {
  MockAnimalModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get animalName =>
      (super.noSuchMethod(
            Invocation.getter(#animalName),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#animalName),
            ),
          )
          as String);

  @override
  List<_i69.AnimalGenderViewCount> get genderViewCounts =>
      (super.noSuchMethod(
            Invocation.getter(#genderViewCounts),
            returnValue: <_i69.AnimalGenderViewCount>[],
          )
          as List<_i69.AnimalGenderViewCount>);

  @override
  _i11.AnimalModel updateGender(_i36.AnimalGender? newGender) =>
      (super.noSuchMethod(
            Invocation.method(#updateGender, [newGender]),
            returnValue: _FakeAnimalModel_11(
              this,
              Invocation.method(#updateGender, [newGender]),
            ),
          )
          as _i11.AnimalModel);

  @override
  _i11.AnimalModel updateViewCount(_i38.ViewCountModel? newViewCount) =>
      (super.noSuchMethod(
            Invocation.method(#updateViewCount, [newViewCount]),
            returnValue: _FakeAnimalModel_11(
              this,
              Invocation.method(#updateViewCount, [newViewCount]),
            ),
          )
          as _i11.AnimalModel);
}

/// A class which mocks [AnimalSightingModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnimalSightingModel extends _i1.Mock
    implements _i8.AnimalSightingModel {
  MockAnimalSightingModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.AnimalSightingModel copyWith({
    List<_i11.AnimalModel>? animals,
    _i11.AnimalModel? animalSelected,
    _i39.AnimalCategory? category,
    String? description,
    List<_i41.LocationModel>? locations,
    _i42.DateTimeModel? dateTime,
    _i70.ImageListModel? images,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #animals: animals,
              #animalSelected: animalSelected,
              #category: category,
              #description: description,
              #locations: locations,
              #dateTime: dateTime,
              #images: images,
            }),
            returnValue: _FakeAnimalSightingModel_7(
              this,
              Invocation.method(#copyWith, [], {
                #animals: animals,
                #animalSelected: animalSelected,
                #category: category,
                #description: description,
                #locations: locations,
                #dateTime: dateTime,
                #images: images,
              }),
            ),
          )
          as _i8.AnimalSightingModel);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Questionnaire].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestionnaire extends _i1.Mock implements _i4.Questionnaire {
  MockQuestionnaire() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i29.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  _i13.Experiment get experiment =>
      (super.noSuchMethod(
            Invocation.getter(#experiment),
            returnValue: _FakeExperiment_14(
              this,
              Invocation.getter(#experiment),
            ),
          )
          as _i13.Experiment);

  @override
  _i14.InteractionType get interactionType =>
      (super.noSuchMethod(
            Invocation.getter(#interactionType),
            returnValue: _FakeInteractionType_15(
              this,
              Invocation.getter(#interactionType),
            ),
          )
          as _i14.InteractionType);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  set id(String? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  set experiment(_i13.Experiment? _experiment) => super.noSuchMethod(
    Invocation.setter(#experiment, _experiment),
    returnValueForMissingStub: null,
  );

  @override
  set identifier(String? _identifier) => super.noSuchMethod(
    Invocation.setter(#identifier, _identifier),
    returnValueForMissingStub: null,
  );

  @override
  set interactionType(_i14.InteractionType? _interactionType) =>
      super.noSuchMethod(
        Invocation.setter(#interactionType, _interactionType),
        returnValueForMissingStub: null,
      );

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  set questions(List<_i71.Question>? _questions) => super.noSuchMethod(
    Invocation.setter(#questions, _questions),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Species].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpecies extends _i1.Mock implements _i5.Species {
  MockSpecies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i29.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get category =>
      (super.noSuchMethod(
            Invocation.getter(#category),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#category),
            ),
          )
          as String);

  @override
  String get commonName =>
      (super.noSuchMethod(
            Invocation.getter(#commonName),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#commonName),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i2.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i29.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Belonging].
///
/// See the documentation for Mockito's code generation for more information.
class MockBelonging extends _i1.Mock implements _i20.Belonging {
  MockBelonging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get category =>
      (super.noSuchMethod(
            Invocation.getter(#category),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#category),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  set ID(String? _ID) => super.noSuchMethod(
    Invocation.setter(#ID, _ID),
    returnValueForMissingStub: null,
  );

  @override
  set category(String? _category) => super.noSuchMethod(
    Invocation.setter(#category, _category),
    returnValueForMissingStub: null,
  );

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Interaction].
///
/// See the documentation for Mockito's code generation for more information.
class MockInteraction extends _i1.Mock implements _i22.Interaction {
  MockInteraction() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i52.InteractionType get interactionType =>
      (super.noSuchMethod(
            Invocation.getter(#interactionType),
            returnValue: _i52.InteractionType.waarneming,
          )
          as _i52.InteractionType);

  @override
  String get userID =>
      (super.noSuchMethod(
            Invocation.getter(#userID),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#userID),
            ),
          )
          as String);

  @override
  _i15.Reportable get report =>
      (super.noSuchMethod(
            Invocation.getter(#report),
            returnValue: _FakeReportable_16(this, Invocation.getter(#report)),
          )
          as _i15.Reportable);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Possesion].
///
/// See the documentation for Mockito's code generation for more information.
class MockPossesion extends _i1.Mock implements _i7.Possesion {
  MockPossesion() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get possesionName =>
      (super.noSuchMethod(
            Invocation.getter(#possesionName),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#possesionName),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [ReportLocation].
///
/// See the documentation for Mockito's code generation for more information.
class MockReportLocation extends _i1.Mock implements _i44.ReportLocation {
  MockReportLocation() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Response].
///
/// See the documentation for Mockito's code generation for more information.
class MockResponse extends _i1.Mock implements _i16.Response {
  MockResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get interactionID =>
      (super.noSuchMethod(
            Invocation.getter(#interactionID),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#interactionID),
            ),
          )
          as String);

  @override
  String get questionID =>
      (super.noSuchMethod(
            Invocation.getter(#questionID),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#questionID),
            ),
          )
          as String);

  @override
  set answerID(String? _answerID) => super.noSuchMethod(
    Invocation.setter(#answerID, _answerID),
    returnValueForMissingStub: null,
  );

  @override
  set interactionID(String? _interactionID) => super.noSuchMethod(
    Invocation.setter(#interactionID, _interactionID),
    returnValueForMissingStub: null,
  );

  @override
  set questionID(String? _questionID) => super.noSuchMethod(
    Invocation.setter(#questionID, _questionID),
    returnValueForMissingStub: null,
  );

  @override
  set text(String? _text) => super.noSuchMethod(
    Invocation.setter(#text, _text),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);

  @override
  _i16.Response copyWith({
    String? answerID,
    String? interactionID,
    String? questionID,
    String? text,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#copyWith, [], {
              #answerID: answerID,
              #interactionID: interactionID,
              #questionID: questionID,
              #text: text,
            }),
            returnValue: _FakeResponse_17(
              this,
              Invocation.method(#copyWith, [], {
                #answerID: answerID,
                #interactionID: interactionID,
                #questionID: questionID,
                #text: text,
              }),
            ),
          )
          as _i16.Response);
}

/// A class which mocks [InteractionType].
///
/// See the documentation for Mockito's code generation for more information.
class MockInteractionType extends _i1.Mock implements _i14.InteractionType {
  MockInteractionType() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  String get description =>
      (super.noSuchMethod(
            Invocation.getter(#description),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#description),
            ),
          )
          as String);

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Question].
///
/// See the documentation for Mockito's code generation for more information.
class MockQuestion extends _i1.Mock implements _i71.Question {
  MockQuestion() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i29.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  bool get allowMultipleResponse =>
      (super.noSuchMethod(
            Invocation.getter(#allowMultipleResponse),
            returnValue: false,
          )
          as bool);

  @override
  bool get allowOpenResponse =>
      (super.noSuchMethod(
            Invocation.getter(#allowOpenResponse),
            returnValue: false,
          )
          as bool);

  @override
  String get description =>
      (super.noSuchMethod(
            Invocation.getter(#description),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#description),
            ),
          )
          as String);

  @override
  int get index =>
      (super.noSuchMethod(Invocation.getter(#index), returnValue: 0) as int);

  @override
  String get text =>
      (super.noSuchMethod(
            Invocation.getter(#text),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#text),
            ),
          )
          as String);

  @override
  set id(String? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  set allowMultipleResponse(bool? _allowMultipleResponse) => super.noSuchMethod(
    Invocation.setter(#allowMultipleResponse, _allowMultipleResponse),
    returnValueForMissingStub: null,
  );

  @override
  set allowOpenResponse(bool? _allowOpenResponse) => super.noSuchMethod(
    Invocation.setter(#allowOpenResponse, _allowOpenResponse),
    returnValueForMissingStub: null,
  );

  @override
  set answers(List<_i72.Answer>? _answers) => super.noSuchMethod(
    Invocation.setter(#answers, _answers),
    returnValueForMissingStub: null,
  );

  @override
  set description(String? _description) => super.noSuchMethod(
    Invocation.setter(#description, _description),
    returnValueForMissingStub: null,
  );

  @override
  set index(int? _index) => super.noSuchMethod(
    Invocation.setter(#index, _index),
    returnValueForMissingStub: null,
  );

  @override
  set openResponseFormat(String? _openResponseFormat) => super.noSuchMethod(
    Invocation.setter(#openResponseFormat, _openResponseFormat),
    returnValueForMissingStub: null,
  );

  @override
  set text(String? _text) => super.noSuchMethod(
    Invocation.setter(#text, _text),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}

/// A class which mocks [Experiment].
///
/// See the documentation for Mockito's code generation for more information.
class MockExperiment extends _i1.Mock implements _i13.Experiment {
  MockExperiment() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get id =>
      (super.noSuchMethod(
            Invocation.getter(#id),
            returnValue: _i29.dummyValue<String>(this, Invocation.getter(#id)),
          )
          as String);

  @override
  String get description =>
      (super.noSuchMethod(
            Invocation.getter(#description),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#description),
            ),
          )
          as String);

  @override
  String get name =>
      (super.noSuchMethod(
            Invocation.getter(#name),
            returnValue: _i29.dummyValue<String>(
              this,
              Invocation.getter(#name),
            ),
          )
          as String);

  @override
  DateTime get start =>
      (super.noSuchMethod(
            Invocation.getter(#start),
            returnValue: _FakeDateTime_5(this, Invocation.getter(#start)),
          )
          as DateTime);

  @override
  _i2.User get user =>
      (super.noSuchMethod(
            Invocation.getter(#user),
            returnValue: _FakeUser_0(this, Invocation.getter(#user)),
          )
          as _i2.User);

  @override
  set id(String? _id) => super.noSuchMethod(
    Invocation.setter(#id, _id),
    returnValueForMissingStub: null,
  );

  @override
  set description(String? _description) => super.noSuchMethod(
    Invocation.setter(#description, _description),
    returnValueForMissingStub: null,
  );

  @override
  set end(DateTime? _end) => super.noSuchMethod(
    Invocation.setter(#end, _end),
    returnValueForMissingStub: null,
  );

  @override
  set livingLab(_i73.LivingLabs? _livingLab) => super.noSuchMethod(
    Invocation.setter(#livingLab, _livingLab),
    returnValueForMissingStub: null,
  );

  @override
  set messageActivity(int? _messageActivity) => super.noSuchMethod(
    Invocation.setter(#messageActivity, _messageActivity),
    returnValueForMissingStub: null,
  );

  @override
  set name(String? _name) => super.noSuchMethod(
    Invocation.setter(#name, _name),
    returnValueForMissingStub: null,
  );

  @override
  set numberOfMessages(int? _numberOfMessages) => super.noSuchMethod(
    Invocation.setter(#numberOfMessages, _numberOfMessages),
    returnValueForMissingStub: null,
  );

  @override
  set numberOfQuestionnaires(int? _numberOfQuestionnaires) =>
      super.noSuchMethod(
        Invocation.setter(#numberOfQuestionnaires, _numberOfQuestionnaires),
        returnValueForMissingStub: null,
      );

  @override
  set questionnaireActivity(int? _questionnaireActivity) => super.noSuchMethod(
    Invocation.setter(#questionnaireActivity, _questionnaireActivity),
    returnValueForMissingStub: null,
  );

  @override
  set start(DateTime? _start) => super.noSuchMethod(
    Invocation.setter(#start, _start),
    returnValueForMissingStub: null,
  );

  @override
  set user(_i2.User? _user) => super.noSuchMethod(
    Invocation.setter(#user, _user),
    returnValueForMissingStub: null,
  );

  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(
            Invocation.method(#toJson, []),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
