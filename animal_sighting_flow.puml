@startuml
skinparam monochrome true
skinparam padding 2
skinparam nodesep 60
skinparam ranksep 80
skinparam linetype ortho

title AnimalSighting Flow & State Management

participant "RapporterenScreen" as Rapporteren
participant "AnimalConditionScreen" as Condition
participant "AnimalGenderScreen" as Gender
participant "AnimalAmountSelectionScreen" as Amount
participant "AddAnotherAnimalScreen" as AddAnother
participant "AnimalListOverviewScreen" as Overview
participant "AnimalSightingManager" as Manager
participant "NavigationManager" as Nav
participant "AnimalSightingModel" as Model

note over Rapporteren, Model
  Initial State:
  AnimalSightingModel {
    animals: [],
    animalSelected: null,
    category: null,
    description: null,
    location: null,
    dateTime: null,
    images: null
  }
end note

== Initialization ==
Rapporteren -> Manager: createAnimalSighting()
activate Manager
Manager -> Model: create empty model
Manager --> Rapporteren: empty AnimalSightingModel
deactivate Manager

== Condition Selection ==
Rapporteren -> Nav: pushReplacementForward(ConditionScreen)
activate Condition
Condition -> Manager: updateConditionFromString(status)
Manager -> Model: update condition
note right: AnimalModel.condition updated

Condition -> Nav: pushReplacementForward(GenderScreen)
deactivate Condition

== Gender Selection ==
activate Gender
Gender -> Manager: handleGenderSelection(gender)
Manager -> Model: update gender
note right: AnimalModel.gender updated

Gender -> Nav: pushReplacementForward(AmountScreen)
deactivate Gender

== Amount & Description ==
activate Amount
Amount -> Manager: updateViewCount(count)
Manager -> Model: update viewCount
Amount -> Manager: updateDescription(text)
Manager -> Model: update description
note right: viewCount & description updated

Amount -> Nav: push(AddAnotherAnimalScreen)
deactivate Amount

== Add Another Animal Decision ==
activate AddAnother
alt Add Another Animal
    AddAnother -> Manager: finalizeAnimal(clearSelected: true)
    note right
        - Current animal added to animals list
        - animalSelected cleared
        - Other fields preserved
    end note
    AddAnother -> Nav: push(ConditionScreen)
else Skip to Overview
    AddAnother -> Manager: finalizeAnimal(clearSelected: true)
    AddAnother -> Nav: push(AnimalListOverviewScreen)
end
deactivate AddAnother

== Overview & Editing ==
activate Overview
Overview -> Manager: validateAnimalSighting()
Overview --> User: Display final overview

group Edit Mode
    User -> Overview: press edit button
    activate Overview
    Overview -> Overview: _toggleEditMode()
    note right
        - Initialize temporary counts
        - Setup text controllers
        - Enable editing UI
    end note

    alt Update Counts
        User -> Overview: modify animal counts
        Overview -> Overview: _tempCounts update
        note right: Store changes temporarily
    else Update Description
        User -> Overview: modify description
        Overview -> Overview: _opmerkingController update
        note right: Store description temporarily
    end

    User -> Overview: press save button
    Overview -> Overview: _saveChanges()
    Overview -> Manager: updateAnimal(updatedAnimal)
    Manager -> Model: update animals list
    Overview -> Manager: updateDescription(newDescription)
    Manager -> Model: update description
    Overview -> Overview: cleanup temporary state
    note right
        - Clear _tempCounts
        - Clear controllers
        - Disable editing UI
    end note
    deactivate Overview
end

== Cleanup & Disposal ==
Overview -> Overview: dispose()
note right
    - Dispose _opmerkingController
    - Dispose all count controllers
    - Remove state change listener
end note

Nav -> Manager: dispose()
note right
    - Controllers disposed
    - Listeners removed
    - Resources cleaned up
end note

@enduml
