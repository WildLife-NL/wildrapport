@startuml
skinparam monochrome true
skinparam padding 2
skinparam nodesep 60
skinparam ranksep 80
skinparam linetype ortho

package "Widget Implementation" {
  package "Core Widgets" {
    class BrownButton {
      + model: BrownButtonModel
      + onPressed: Function
      --
      Base button component:
      - Configurable icons
      - Custom styling
      - Shadow effects
      - Tap handling
    }

    class CustomDropdown {
      + type: DropdownType
      + selectedValue: String
      + isExpanded: bool
      + onOptionSelected: Function
      --
      Common dropdown features:
      - Expansion animation
      - Option selection
      - State management
    }
  }

  package "Dropdown Types" {
    class FilterDropdown {
      + buildFilterDropdown()
      + handleFilterSelection()
      --
      Features:
      - Search bar option
      - Category filters
      - Reset filter button
      --
      Structure:
      1. Filter header
      2. Expandable list
      3. Search input
      4. Reset option
    }

    class LocationDropdown {
      + buildLocationDropdown()
      + handleLocationSelection()
      --
      Features:
      - Current location
      - Custom location
      - Location icon display
      --
      Structure:
      1. Location header
      2. Location options
      3. Icon indicators
    }
  }

  package "Interfaces" {
    interface DropdownInterface {
      + buildDropdown()
      + {abstract} handleSelection()
    }
  }

  package "Implementation" {
    class DropdownManager {
      + buildFilterDropdown()
      + buildLocationDropdown()
      + handleSelection()
      --
      Implementation details:
      1. Builds dropdown
      2. Manages state
      3. Handles callbacks
    }
  }

  package "Models" {
    class BrownButtonModel {
      + text: String
      + leftIconPath: String
      + rightIconPath: String
      + backgroundColor: Color
    }
  }

  package "Screen Implementation" {
    class LocationScreen {
      - _selectedLocation: String
      - _isExpanded: bool
      --
      Implementation:
      1. Injects DropdownInterface
      2. Manages local state
      3. Handles updates
    }

    class AnimalsScreen {
      - _selectedFilter: String
      - _isExpanded: bool
      --
      Implementation:
      1. Injects DropdownInterface
      2. Manages filter state
      3. Updates list
    }
  }
}

' Relationships
CustomDropdown --> BrownButton : uses
FilterDropdown --|> CustomDropdown : extends
LocationDropdown --|> CustomDropdown : extends
DropdownManager ..|> DropdownInterface : implements
LocationScreen --> LocationDropdown : uses
AnimalsScreen --> FilterDropdown : uses

note right of FilterDropdown
  Filter Dropdown Structure:
  1. Header:
     - BrownButton with filter icon
     - Current filter display
     - Expansion arrow
  2. Expanded State:
     - Search bar (conditional)
     - Category options
     - Reset option
  3. State Management:
     - Selected filter tracking
     - Expansion state
     - Selection handling
end note

note right of LocationDropdown
  Location Dropdown Structure:
  1. Header:
     - BrownButton with location icon
     - Selected location display
     - Expansion arrow
  2. Expanded State:
     - Current location option
     - Custom location option
     - Location icons
  3. State Management:
     - Location tracking
     - Expansion state
     - Updates handling
end note

note bottom of DropdownManager
  Implementation Flow:
  1. Screen creates dropdown
  2. Manager builds structure
  3. CustomDropdown handles state
  4. BrownButton manages UI
  5. Models handle configuration
  6. Interface ensures consistency
end note

@enduml
